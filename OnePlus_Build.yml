name:OnePlus_Pad_2_Pro
on:
  workflows_dispatch:
    inputs:
      REPO_MANIFEST:
        description: "请选择要编译的机型："
        required: true
        type: choice
        options:
          - 'oneplus_pad_2_pro'
        default: 'oneplus_pad_2_pro'
      KERNEL_SUFFIX:
          description: '✏️ 内核名称修改(可emjio和符号)'
          required: true
          default: '-android15-8-g0261dbe3cf7e-ab12786384-4k'
      KERNEL_TIME:
          description: '⏰ 内核构建时间(默认原构建时间)'
          required: true
          default: 'Wed Dec 11 19:16:38 UTC 2024'
      enable_feature_x:
          description: '是否启用KPM'
          required: false
          default: false
          type: boolean
      enable_feature_y:
        description: "是否启用lz4kd"
        required: false
        default: false
        type: boolean
      enable_feature_z:
        description: "是否添加风驰驱动"
        required: false
        default: false
        type: boolean
      enable_feature_b:
        description: "添加BBR控制算法"
        required: false
        default: true
        type: boolean
        

jobs:
  build:
    name: Build_${{ github.event.inputs.REPO_MANIFEST }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
        fetch-depth: 0
    
    - name: 📊 Check Disk Space (检查磁盘空间)
      run: |
        echo "构建前磁盘空间："
        df -h

    - name: ⚙️ Set device-specific CCACHE_DIR (设置ccache路径)
      run: |
        echo "CCACHE_DIR=$HOME/.ccache_${REPO_MANIFEST}" >> $GITHUB_ENV
    
    - name: 📦 Configure Git (设置下载账户)
      run: |
        git config --global user.name "MoranOrz"
        git config --global user.email "authorz@aliyun.com"
      
    - name: 🛠 Configure APT caching (配置APT缓存)
      run: |
        APT_CACHE_DIR="$HOME/apt-cache"
        mkdir -p "$APT_CACHE_DIR"/{archives,lists/partial}
        echo "Dir::Cache \"$APT_CACHE_DIR\";" | sudo tee /etc/apt/apt.conf.d/90user-cache
        echo "Dir::Cache::archives \"$APT_CACHE_DIR/archives\";" | sudo tee -a /etc/apt/apt.conf.d/90user-cache
        echo "Dir::State::lists \"$APT_CACHE_DIR/lists\";" | sudo tee -a /etc/apt/apt.conf.d/90user-cache
        echo "Acquire::Check-Valid-Until \"false\";" | sudo tee -a /etc/apt/apt.conf.d/90user-cache
        echo "Acquire::Languages \"none\";" | sudo tee -a /etc/apt/apt.conf.d/90user-cache
        sudo chown -R $USER:$USER "$APT_CACHE_DIR"
    
    - name: 🛠 Cache APT packages (缓存APT包)
      uses: actions/cache@v3
      with:
        path: ${{ env.HOME }}/apt-cache
        key: ${{ runner.os }}-apt-${{ hashFiles('.github/workflows/OnePlus_Build.yml') }}
        restore-keys: |
          ${{ runner.os }}-apt-
    
    - name: 📦 Install dependencies (安装依赖)
      run: |
        sudo rm -f /var/lib/apt/lists/lock /var/lib/dpkg/lock
        APT_CACHE_DIR="$HOME/apt-cache"
        mkdir -p "$APT_CACHE_DIR/lists/partial"
        sudo apt -o Dir::Cache="$APT_CACHE_DIR" update -qq
        sudo DEBIAN_FRONTEND=noninteractive apt -o Dir::Cache="$APT_CACHE_DIR" install -yq --no-install-recommends \
          python3 git curl ccache libelf-dev \
          build-essential flex bison libssl-dev \
          libncurses-dev liblz4-tool zlib1g-dev \
          libxml2-utils rsync unzip
        echo "✅ 依赖安装完成"
    
    - name: 📥 Restore ccache (载入 ccache 缓存)
      uses: actions/cache@v3
      with:
        path: ${{ env.CCACHE_DIR }}
        key: ccache-${{ runner.os }}-${{ github.ref }}-${{ env.REPO_MANIFEST }}
        restore-keys: |
          ccache-${{ runner.os }}-${{ env.REPO_MANIFEST }}-
          ccache-${{ runner.os }}-
    
    - name: 📥 Init ccache (如果是第一次运行则初始化ccache)
      run: |
        export CCACHE_COMPILERCHECK="%compiler% -dumpmachine; %compiler% -dumpversion"
        export CCACHE_NOHASHDIR="true"
        export CCACHE_HARDLINK="true"
        export CCACHE_DIR="${{ env.CCACHE_DIR }}"
        export CCACHE_MAXSIZE="8G"
        
        INIT_FLAG="$CCACHE_DIR/.ccache_initialized"
        if command -v ccache >/dev/null 2>&1; then
          if [ ! -f "$INIT_FLAG" ]; then
            echo "初始化 ccache ($CCACHE_DIR)..."
            mkdir -p "$CCACHE_DIR"
            ccache -M "$CCACHE_MAXSIZE"
            touch "$INIT_FLAG"
          else
            echo "ccache 已初始化，跳过"
          fi
        else
          echo "未安装 ccache，跳过"
        fi
        
      - name: 📥 Install repo tool (下载repo工具)
        run: |
         curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
         chmod a+x ~/repo
         sudo mv ~/repo /usr/local/bin/repo

      - name: 📥 Initialize repo and sync (初始化repo并同步内核源码)
        run: |
         mkdir kernel_workspace && cd kernel_workspace
         repo init -u https://github.com/MoranOrz/kernel_manifest.git -b refs/heads/oneplus/sm8750 -m ${REPO_MANIFEST}.xml --depth=1
         repo --trace sync -c -j$(nproc --all) --no-tags
         rm kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports!"
         rm kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"

      - name: ⚙️ Set SuKiSU Ultra (设置SuKiSU Ultra)
        run: |
          cd kernel_workspace/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/susfs-main/kernel/setup.sh" | bash -s susfs-main
          cd ./KernelSU
          KSU_VERSION=$(expr $(/usr/bin/git rev-list --count main) "+" 10700)
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          export KSU_VERSION=$KSU_VERSION
          sed -i "s/DKSU_VERSION=12800/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile
